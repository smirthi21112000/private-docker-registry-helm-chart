
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: {{ .Values.registry.namespace }}
  labels:
    component: registry
spec:
  type: NodePort
  selector:
    app: registry
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: {{ .Values.registry.nodeport }}


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: {{ .Values.registry.namespace }}
  labels:
    app: registry
spec:
  replicas: {{ .Values.registry.replicas }}
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      initContainers:
      - name: password-setup
        image: {{ .Values.registry.passwordImage }}
        imagePullPolicy: IfNotPresent
        tty: true
        stdin: true
        volumeMounts:
        - mountPath: /docker-registry/auth
          name: auth
        - mountPath: /docker-registry/data
          name: data
      containers:
      - name: registry
        image: registry:2
        env:
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /docker-registry/auth/registry.password
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /data
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /docker-registry/auth
          name: auth
        - mountPath: /docker-registry/data
          name: data

      volumes:
      - name: auth
        hostPath:
          path: {{ .Values.registry.authpath }}
      - name: data
        hostPath:
          path: {{ .Values.registry.datapath }}



